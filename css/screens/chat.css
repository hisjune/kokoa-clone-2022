#chat-screen {
    background-color: #abc1d1;
    height: 500vh;
}

#chat-screen .alt-header,
#chat-screen .status-bar  {
    top: 0;
    position: fixed;
    width: 100%;
    background-color: #abc1d1;
    box-sizing: border-box;
} 


#chat-screen .status-bar  {
    z-index: 2; 
    /*z-index: 몇번째 layer인지 알려줌. 더 높은 layer 값을 가진 값이 더 위에 보임 
                absolute position 또는 fixed position에 적용 가능함 */

}

#chat-screen .alt-header {
    top: 0px;
    z-index: 1;
}

@keyframes fadeIn {
    from{
        transform: translateY(10px);
        opacity: 0;
    }
    to{
        tramsform: none;
        opacity: 1;
    }
}
.main-chat {
    margin-top: 130px;
    display: flex;
    flex-direction: column;
    align-items: center;
    animation: fadeIn 0.8s linear;
}

.chat__timestamp {
    color: white;
    background-color: #92a4b2;
    padding: 15px;
    border-radius: 25px;
    font-size: 14px;
    margin-bottom: 25px;
}

.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 25px;
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 40%;
    margin-right: 15px;
}

.message__author {
    margin-bottom: 5px;
    display: block;
}

.message__bubble {
    background-color: white;
    padding: 13px;
    font-size: 18px;
    border-radius: 15px;
    border-top-left-radius: 0px;
    margin-right: 5px;
}

.message__info {
    display: flex;
    align-items: flex-end;
}

.message__time, .message__author{
    opacity: 0.8;
    font-size: 13px;
}

.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 25px;
} 

.message-row--own {
    justify-content: flex-end;
}


.message-row--own .message__bubble { /*own 내부의 bubble을 지칭함*/
    background-color: var(--yellow);
    border-top-right-radius: 0px;
    border-top-left-radius: 15px;
    margin-right: 0px;
    margin-left: 5px;
}

/* ==== flex children 간 위치 순서 바꾸기(css만 사용) ==== */

/* 1. order 사용: order: 오직 flex children에게만 적용됨 */
/*message__time보다 order 수가 크므로 더 오른쪽에 위치함*/
/* .message-row--own .message__bubble {
    order: 1;
}
.message-row--own .message__time {
    order: 0; 
} */
/* 2. row-reverse 사용*/
.message-row--own .message__info {
    flex-direction: row-reverse;
}


.reply {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
    transition: all .3s ease-in-out;
}

.reply .reply__column:first-child {
    width: 10%;
}
.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}

.reply i {
    opacity: 0.5;
}

.reply input {
    padding: 12px;
    width: 100%; 
    /* reply의 input에 width 100%를 주기 위해서는 input이 속해있는 column과 
       그 옆의 column 모두 width가 존재해야 함  */
    border: var(--main-border);
    border-radius: 20px;
    box-sizing: border-box;
    transition: all .3s ease-in-out;
}

/* width의 의미
: width:50% takes 50% of the width of the parent
: If the width of the child is %, then we need to set the width of the parent.
    But to do width:10px on the child we don't have to set it on the parent.*/


/* Child combinator
: The child combinator (>) is placed between two CSS selectors. 
It matches only those elements matched by the second selector that are the direct children of elements matched by the first.
 */

.reply__column:last-child > i, /*child combinator 없는 경우 버튼 안의 아이콘까지 변경해버림*/
.reply__column:last-child button {
    position: absolute;
    right: -3px;
    top: 2px;
}

.reply__column:last-child > i {
    right: 40px;
    top: 10px;
}

.reply__column button {
    background-color: var(--yellow);
    border: none;
    width: 30px;
    height: 30px;
    border-radius: 50%;

}

.reply__column button i {
    opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
    outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile,
.reply button {
    transition: opacity 0.3s ease-in-out;
}

 /* reply:focus-within ::reply 내부에 어떤 element가 focus 되어 있다면 */
.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile,
.reply:focus-within button {
    opacity: 0;
}

.reply:focus-within input {
    width: 98vw;
    transform: translateX(-13%) translateY(-80px);
}

.reply:focus-within {
    transform: translateY(80px);
}